version: "3.9"
  #networks:
  #grafana: {}
configs:
  agent.yaml:
    file: docker/agent.yaml

volumes:
  grafana: {}
  tempo: {}
  loki: {}
  agent: {}

services:
  agent:
    image: grafana/agent
    volumes:
      - agent:/agent
    ports:
      - "12347:12347" # HTTP ingester
    command:
      - "-config.file=/agent.yaml"
      - "-enable-features=integrations-next"
      - "-config.expand-env=true"
    configs:
      - agent.yaml
  tempo:
    image: grafana/tempo
    volumes:
      - tempo:/traces
    command:
      - "-server.http-listen-port=3100"
      - "-storage.trace.backend=local"
      - "-storage.trace.local.path=/traces"
    ports:
      - "4317:4317" # gRPC
  loki:
    image: grafana/loki
    command:
      - "-server.http-listen-address=0.0.0.0"
      - "-config.file=/etc/loki/local-config.yaml"
    volumes:
      - loki:/loki
      #ports:
      #- "3100:3100" # HTTP
      #- "9095:9095" # gRPC
  grafana:
    image: grafana/grafana
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - "3000:3000"

        #environment:
        #POSTGRES_USER: console
        #POSTGRES_PASSWORD: console
        #POSTGRES_DB: console
        #volumes:
        #- pgdata:/var/lib/postgresql/data
        #
        #adminer:
        #depends_on:
        #- postgres
        #image: adminer:latest
        #restart: always
        #ports:
        #- "3003:8080"
        #environment:
        #ADMINER_DEFAULT_SERVER: postgres
        #
